Helpers
    digit = ['0'..'9'];
    letter = ['a'..'z'];
    letters = letter (letter | digit)*;

Tokens
    ID = letter letters;
    INTEGER = digit+;
    FLOAT = digit+ '.' digit+;

Productions
    program = { statement* };
    statement = assignment
              | arithmeticOperation
              | logicalOperation
              | conditionalStatement
              | loopStatement
              | basicOutput
              | functionDeclaration
              | functionCall
              | COMMENT;
    
    assignment = variable ':=' expression ';';

    arithmeticOperation = expression ('*' | '/' | '+' | '-') expression;

    logicalOperation = expression ('==' | '!=' | '>' | '<') expression;

    conditionalStatement = 'if' '(' expression ')' '{' statement* '}'
                         ('else' '{' statement* '}')?;

    loopStatement = 'for' '(' assignment ';' expression ';' assignment ')' '{' statement* '}'
                  | 'while' '(' expression ')' '{' statement* '}'
                  | 'do' '{' statement* '}' 'while' '(' expression ')';

    basicOutput = 'print' expression ';';

    functionDeclaration = 'def' functionName '(' parameterList? ')' '{' statement* '}';

    parameterList = variable (',' variable)*;

    functionCall = functionName '(' argumentList? ')';

    functionName = ID;

    argumentList = expression (',' expression)*;

    condition = expression;

    expression = variable
               | number
               | '(' expression ')'
               | expression ('+' | '-' | '*' | '/' | '==' | '!=' | '>' | '<') expression;

    variable = ID;

    number = INTEGER | FLOAT;

Comments
    COMMENT = '/*' ~[*/]* '*/';

WhiteSpace
    WS = [' ' | '\t' | '\r' | '\n'] -> skip;
